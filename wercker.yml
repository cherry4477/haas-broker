box: golang:1.5.1
services:
    - mongo

build:
  # The steps that will be executed on build
  steps:
    - setup-go-workspace
    - wercker/golint

    # Get the dependencies
    - script:
        name: go get
        code: |
          cd $WERCKER_SOURCE_DIR
          go version
          go get -u github.com/tools/godep
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH

    # Test the project
    - script:
        name: go unit tests
        code: |
          godep go test ./... -v -race

    # Test the project
    #- script:
    #    name: go integration tests
    #    code: |
    #      godep go test ./service/integrations/_tests -v -race

    # Setting the coverage watermark low.
    # This should be raised as we gain more coverage...
    # Test coverage for the project
    - script:
        name: go test cover
        code: |
          (cd $WERCKER_SOURCE_DIR && ./testCoverage ./... $COVERAGE_WATERMARK)

    - script:
        name: build the server binary
        code: |
          godep go build main.go

    - script:
        name: add repo to artifact
        code: |
          cp -R ./ ${WERCKER_OUTPUT_DIR}

    #after-steps:
    #af- setup-go-workspace
    #af- script:
    #af    name: coveralls upload
    #af    code: |
    #af      go get github.com/axw/gocov/gocov
    #af      go get github.com/mattn/goveralls
    #af      export GIT_BRANCH=$WERCKER_GIT_BRANCH
    #af      ./coverage --coveralls

deploy:
  steps: 
    - script:
        name: install-packages
        code: |
          sudo apt-get install -y openssh-client wget

    - wercker/add-ssh-key@1.0.2:
        keyname: PEZ_GITHUB_KEY  

    - add-to-known_hosts:
        hostname: github.com
        fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
    
    - script:
        name: get cf cli & plugins
        code: |
          ./setup_cf_cli

    - script: 
        name: cloud deploy
        code: |
          cf cloud-deploy --run haas-broker.${WERCKER_DEPLOYTARGET_NAME} --org pivotal-pez --repo deployments --branch master

    - xchapter7x/flowy-release:
        action: "tag-only-release"
        tag_variable_name: "VERSION_TAG"
        active: $GITFLOW_ACTIVE
        git_name: $GITFLOW_NAME
        git_email: $GITFLOW_EMAIL

    - script:
        name: set release id variable and version.txt file
        code: |
          git fetch --tags
          export WERCKER_GITHUB_CREATE_RELEASE_ID=`git log -n1 --pretty=format:%d HEAD | sed s/\ //g | sed s/tag\://g | awk -F',' '{print $2}'`
          echo $WERCKER_GITHUB_CREATE_RELEASE_ID > version.txt
          
    - script:
        name: package release tarball 
        code: |
          tar -cvzf haas-broker.tgz manifest.yml $CF_MANIFEST_FILE_PATH cups.txt main version.txt README.md

    - github-create-release:
        token: $GH_TOKEN
        tag: $WERCKER_GITHUB_CREATE_RELEASE_ID
        title: haas-broker $WERCKER_GITHUB_CREATE_RELEASE_ID
        draft: $RELEASE_DRAFT
    
    - github-upload-asset:
        token: $GH_TOKEN
        file: haas-broker.tgz
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip
